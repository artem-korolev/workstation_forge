---
- name: Ensure /usr/local/bin exists
  ansible.builtin.file:
    path: /usr/local/bin
    state: directory
    mode: "0755"
  tags: [kubernetes]

- name: Set download URL based on architecture
  ansible.builtin.set_fact:
    kind_arch: >-
      {{ 'amd64' if ansible_architecture == 'x86_64'
         else 'arm64' if ansible_architecture == 'aarch64'
         else '' }}
  when: ansible_system == "Linux"
  tags: [kubernetes]

- name: Fail if architecture is unsupported
  ansible.builtin.fail:
    msg: "Unsupported architecture: {{ ansible_architecture }}"
  when: kind_arch == ''
  tags: [kubernetes]

- name: Download kind binary
  ansible.builtin.get_url:
    url: "https://kind.sigs.k8s.io/dl/{{ kube_kind_version }}/kind-linux-{{ kind_arch }}"
    dest: /usr/local/bin/kind
    mode: "0755"
    force: true
  become: true
  tags: [kubernetes]

- name: Retrieve latest stable kubectl version
  ansible.builtin.command: curl -L -s https://dl.k8s.io/release/stable.txt
  register: kubectl_version_result
  changed_when: false
  tags: [kubernetes]

- name: Download kubectl binary
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/{{ kubectl_version_result.stdout }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    mode: "0755"
  become: true
  tags: [kubernetes]

- name: Download kustomize tarball
  ansible.builtin.get_url:
    url: "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F{{ kube_kustomize_version }}/kustomize_{{ kube_kustomize_version }}_linux_amd64.tar.gz"
    dest: /tmp/kustomize.tar.gz
    mode: "0644"
  become: true
  tags: [kubernetes]

- name: Extract kustomize binary
  ansible.builtin.unarchive:
    src: /tmp/kustomize.tar.gz
    dest: /usr/local/bin/
  become: true
  tags: [kubernetes]

- name: Install Helm
  ansible.builtin.include_tasks: helm.yml
  tags: [kubernetes]
